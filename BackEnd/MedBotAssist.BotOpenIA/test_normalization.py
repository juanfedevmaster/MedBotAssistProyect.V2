#!/usr/bin/env python3
"""
Script de prueba para validar la normalizaci√≥n de texto en b√∫squedas.
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from app.services.database_service import normalize_text_for_search

def test_normalization():
    """Pruebas de normalizaci√≥n de texto"""
    
    print("üß™ Pruebas de normalizaci√≥n de texto para b√∫squedas")
    print("=" * 60)
    
    test_cases = [
        # (texto_original, texto_normalizado_esperado)
        ("S√°nchez Garc√≠a", "sanchez garcia"),
        ("Jos√© Mar√≠a", "jose maria"),
        ("P√âREZ", "perez"),
        ("√Ångel Rodr√≠guez", "angel rodriguez"),
        ("Mar√≠a Jos√© Hern√°ndez", "maria jose hernandez"),
        ("GONZ√ÅLEZ L√ìPEZ", "gonzalez lopez"),
        ("   Espacio   Extra   ", "espacio extra"),
        ("Ni√±o con √±", "nino con n"),
        ("M√∫ltiples   espacios", "multiples espacios"),
        ("", ""),  # texto vac√≠o
    ]
    
    all_passed = True
    
    for i, (original, expected) in enumerate(test_cases, 1):
        result = normalize_text_for_search(original)
        status = "‚úÖ PASS" if result == expected else "‚ùå FAIL"
        
        if result != expected:
            all_passed = False
        
        print(f"{i:2d}. {status} '{original}' -> '{result}'")
        if result != expected:
            print(f"     Esperado: '{expected}'")
    
    print("\n" + "=" * 60)
    if all_passed:
        print("‚úÖ Todas las pruebas pasaron correctamente!")
    else:
        print("‚ùå Algunas pruebas fallaron.")
    
    return all_passed

def test_search_examples():
    """Ejemplos de c√≥mo funcionar√° la b√∫squeda"""
    
    print("\nüîç Ejemplos de b√∫squedas que ahora funcionar√°n:")
    print("=" * 60)
    
    examples = [
        ("Usuario busca: 'sanchez'", "Encontrar√°: 'S√°nchez Garc√≠a'"),
        ("Usuario busca: 'jose maria'", "Encontrar√°: 'Jos√© Mar√≠a Rodr√≠guez'"),
        ("Usuario busca: 'PEREZ'", "Encontrar√°: 'P√©rez L√≥pez'"),
        ("Usuario busca: 'angel'", "Encontrar√°: '√Ångel Hern√°ndez'"),
        ("Usuario busca: 'gonzalez'", "Encontrar√°: 'Gonz√°lez Mart√≠nez'"),
    ]
    
    for search, result in examples:
        print(f"‚Ä¢ {search}")
        print(f"  ‚Üí {result}")
        print()

if __name__ == "__main__":
    success = test_normalization()
    test_search_examples()
    
    if success:
        print("üéâ La normalizaci√≥n est√° lista para usar!")
    else:
        print("‚ö†Ô∏è  Revisar la implementaci√≥n de normalizaci√≥n.")
